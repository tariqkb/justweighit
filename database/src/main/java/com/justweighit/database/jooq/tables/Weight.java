/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables;


import com.justweighit.database.jooq.Keys;
import com.justweighit.database.jooq.Public;
import com.justweighit.database.jooq.tables.records.WeightRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Weight extends TableImpl<WeightRecord> {

    private static final long serialVersionUID = 1906436019;

    /**
     * The reference instance of <code>public.weight</code>
     */
    public static final Weight WEIGHT = new Weight();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WeightRecord> getRecordType() {
        return WeightRecord.class;
    }

    /**
     * The column <code>public.weight.ndbno</code>.
     */
    public final TableField<WeightRecord, String> NDBNO = createField("ndbno", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>public.weight.amount</code>.
     */
    public final TableField<WeightRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.weight.unit</code>.
     */
    public final TableField<WeightRecord, Integer> UNIT = createField("unit", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.weight.description</code>.
     */
    public final TableField<WeightRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>public.weight.grams</code>.
     */
    public final TableField<WeightRecord, BigDecimal> GRAMS = createField("grams", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.weight</code> table reference
     */
    public Weight() {
        this("weight", null);
    }

    /**
     * Create an aliased <code>public.weight</code> table reference
     */
    public Weight(String alias) {
        this(alias, WEIGHT);
    }

    private Weight(String alias, Table<WeightRecord> aliased) {
        this(alias, aliased, null);
    }

    private Weight(String alias, Table<WeightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WeightRecord> getPrimaryKey() {
        return Keys.WEIGHT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WeightRecord>> getKeys() {
        return Arrays.<UniqueKey<WeightRecord>>asList(Keys.WEIGHT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WeightRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WeightRecord, ?>>asList(Keys.WEIGHT__FOOD_WEIGHT_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Weight as(String alias) {
        return new Weight(alias, this);
    }

    /**
     * Rename this table
     */
    public Weight rename(String name) {
        return new Weight(name, null);
    }
}
