/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables;


import com.justweighit.database.jooq.Keys;
import com.justweighit.database.jooq.Public;
import com.justweighit.database.jooq.tables.records.NutrientRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nutrient extends TableImpl<NutrientRecord> {

    private static final long serialVersionUID = 1874573124;

    /**
     * The reference instance of <code>public.nutrient</code>
     */
    public static final Nutrient NUTRIENT = new Nutrient();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NutrientRecord> getRecordType() {
        return NutrientRecord.class;
    }

    /**
     * The column <code>public.nutrient.id</code>.
     */
    public final TableField<NutrientRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.nutrient.name</code>.
     */
    public final TableField<NutrientRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.nutrient.unit</code>.
     */
    public final TableField<NutrientRecord, String> UNIT = createField("unit", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * Create a <code>public.nutrient</code> table reference
     */
    public Nutrient() {
        this("nutrient", null);
    }

    /**
     * Create an aliased <code>public.nutrient</code> table reference
     */
    public Nutrient(String alias) {
        this(alias, NUTRIENT);
    }

    private Nutrient(String alias, Table<NutrientRecord> aliased) {
        this(alias, aliased, null);
    }

    private Nutrient(String alias, Table<NutrientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NutrientRecord> getPrimaryKey() {
        return Keys.NUTRIENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NutrientRecord>> getKeys() {
        return Arrays.<UniqueKey<NutrientRecord>>asList(Keys.NUTRIENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Nutrient as(String alias) {
        return new Nutrient(alias, this);
    }

    /**
     * Rename this table
     */
    public Nutrient rename(String name) {
        return new Nutrient(name, null);
    }
}
