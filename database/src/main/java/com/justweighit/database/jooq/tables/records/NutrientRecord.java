/*
 * This file is generated by jOOQ.
 */
package com.justweighit.database.jooq.tables.records;


import com.justweighit.database.jooq.tables.Nutrient;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NutrientRecord extends UpdatableRecordImpl<NutrientRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = -832574410;

    /**
     * Setter for <code>public.nutrient.id</code>.
     */
    public NutrientRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.nutrient.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.nutrient.name</code>.
     */
    public NutrientRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.nutrient.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.nutrient.unit</code>.
     */
    public NutrientRecord setUnit(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.nutrient.unit</code>.
     */
    public String getUnit() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Nutrient.NUTRIENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Nutrient.NUTRIENT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Nutrient.NUTRIENT.UNIT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getUnit();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getUnit();
    }

    @Override
    public NutrientRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NutrientRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public NutrientRecord value3(String value) {
        setUnit(value);
        return this;
    }

    @Override
    public NutrientRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NutrientRecord
     */
    public NutrientRecord() {
        super(Nutrient.NUTRIENT);
    }

    /**
     * Create a detached, initialised NutrientRecord
     */
    public NutrientRecord(Integer id, String name, String unit) {
        super(Nutrient.NUTRIENT);

        set(0, id);
        set(1, name);
        set(2, unit);
    }
}
