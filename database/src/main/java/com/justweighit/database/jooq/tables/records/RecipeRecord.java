/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables.records;


import com.justweighit.database.jooq.tables.Recipe;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeRecord extends TableRecordImpl<RecipeRecord> implements Record2<String, String> {

    private static final long serialVersionUID = -1527298140;

    /**
     * Setter for <code>public.recipe.user_id</code>.
     */
    public RecipeRecord setUserId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.recipe.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.recipe.name</code>.
     */
    public RecipeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.recipe.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Recipe.RECIPE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Recipe.RECIPE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeRecord value1(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecipeRecord
     */
    public RecipeRecord() {
        super(Recipe.RECIPE);
    }

    /**
     * Create a detached, initialised RecipeRecord
     */
    public RecipeRecord(String userId, String name) {
        super(Recipe.RECIPE);

        set(0, userId);
        set(1, name);
    }
}
