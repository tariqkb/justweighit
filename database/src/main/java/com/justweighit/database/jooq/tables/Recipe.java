/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables;


import com.justweighit.database.jooq.Public;
import com.justweighit.database.jooq.tables.records.RecipeRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Recipe extends TableImpl<RecipeRecord> {

    private static final long serialVersionUID = -1786460636;

    /**
     * The reference instance of <code>public.recipe</code>
     */
    public static final Recipe RECIPE = new Recipe();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecipeRecord> getRecordType() {
        return RecipeRecord.class;
    }

    /**
     * The column <code>public.recipe.user_id</code>.
     */
    public final TableField<RecipeRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.recipe.name</code>.
     */
    public final TableField<RecipeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * Create a <code>public.recipe</code> table reference
     */
    public Recipe() {
        this("recipe", null);
    }

    /**
     * Create an aliased <code>public.recipe</code> table reference
     */
    public Recipe(String alias) {
        this(alias, RECIPE);
    }

    private Recipe(String alias, Table<RecipeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Recipe(String alias, Table<RecipeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Recipe as(String alias) {
        return new Recipe(alias, this);
    }

    /**
     * Rename this table
     */
    public Recipe rename(String name) {
        return new Recipe(name, null);
    }
}
