/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables;


import com.justweighit.database.jooq.Public;
import com.justweighit.database.jooq.tables.records.RecipeFoodRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeFood extends TableImpl<RecipeFoodRecord> {

    private static final long serialVersionUID = -601787772;

    /**
     * The reference instance of <code>public.recipe_food</code>
     */
    public static final RecipeFood RECIPE_FOOD = new RecipeFood();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecipeFoodRecord> getRecordType() {
        return RecipeFoodRecord.class;
    }

    /**
     * The column <code>public.recipe_food.recipe_id</code>.
     */
    public final TableField<RecipeFoodRecord, Integer> RECIPE_ID = createField("recipe_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.recipe_food.ndbno</code>.
     */
    public final TableField<RecipeFoodRecord, String> NDBNO = createField("ndbno", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>public.recipe_food.amount</code>.
     */
    public final TableField<RecipeFoodRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.recipe_food.unit</code>.
     */
    public final TableField<RecipeFoodRecord, Integer> UNIT = createField("unit", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.recipe_food</code> table reference
     */
    public RecipeFood() {
        this("recipe_food", null);
    }

    /**
     * Create an aliased <code>public.recipe_food</code> table reference
     */
    public RecipeFood(String alias) {
        this(alias, RECIPE_FOOD);
    }

    private RecipeFood(String alias, Table<RecipeFoodRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecipeFood(String alias, Table<RecipeFoodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeFood as(String alias) {
        return new RecipeFood(alias, this);
    }

    /**
     * Rename this table
     */
    public RecipeFood rename(String name) {
        return new RecipeFood(name, null);
    }
}
