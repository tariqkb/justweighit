/**
 * This class is generated by jOOQ
 */
package com.justweighit.database.jooq.tables.records;


import com.justweighit.database.jooq.tables.RelatedFood;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelatedFoodRecord extends TableRecordImpl<RelatedFoodRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -1648132140;

    /**
     * Setter for <code>public.related_food.description</code>.
     */
    public RelatedFoodRecord setDescription(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.related_food.description</code>.
     */
    public String getDescription() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.related_food.ndbno</code>.
     */
    public RelatedFoodRecord setNdbno(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.related_food.ndbno</code>.
     */
    public String getNdbno() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.related_food.name</code>.
     */
    public RelatedFoodRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.related_food.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return RelatedFood.RELATED_FOOD.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RelatedFood.RELATED_FOOD.NDBNO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return RelatedFood.RELATED_FOOD.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNdbno();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedFoodRecord value1(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedFoodRecord value2(String value) {
        setNdbno(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedFoodRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedFoodRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RelatedFoodRecord
     */
    public RelatedFoodRecord() {
        super(RelatedFood.RELATED_FOOD);
    }

    /**
     * Create a detached, initialised RelatedFoodRecord
     */
    public RelatedFoodRecord(String description, String ndbno, String name) {
        super(RelatedFood.RELATED_FOOD);

        set(0, description);
        set(1, ndbno);
        set(2, name);
    }
}
